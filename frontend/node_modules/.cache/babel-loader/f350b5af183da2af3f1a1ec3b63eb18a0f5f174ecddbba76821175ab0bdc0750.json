{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/carbontradex/frontend/src/contexts/Web3Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Web3Context.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport getWeb3 from '../utils/getWeb3';\nimport CarbonCreditContract from '../contracts/artifacts/CarbonCredit.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Web3Context = /*#__PURE__*/createContext();\nexport function Web3Provider({\n  children\n}) {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [carbonCreditContract, setCarbonCreditContract] = useState(null);\n  useEffect(() => {\n    async function initializeWeb3() {\n      try {\n        const web3Instance = new Web3(window.ethereum);\n        console.log(web3Instance);\n        const networkId = await web3Instance.eth.net.getId();\n        console.log(networkId);\n        const deployedNetwork = CarbonCreditContract.networks[networkId];\n        console.log(deployedNetwork);\n        const contractInstance = new web3Instance.eth.Contract(CarbonCreditContract.abi, deployedNetwork && deployedNetwork.address);\n        console.log(contractInstance);\n        setWeb3(web3Instance);\n        setCarbonCreditContract(contractInstance);\n      } catch (error) {\n        console.error('Error connecting to Web3', error);\n      }\n    }\n    initializeWeb3();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Web3Context.Provider, {\n    value: {\n      web3,\n      carbonCreditContract\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Web3Provider, \"pDiAVkpWBdHEL62Q1wd6oDf11M0=\");\n_c = Web3Provider;\nexport function useWeb3() {\n  _s2();\n  return useContext(Web3Context);\n}\n_s2(useWeb3, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"Web3Provider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","getWeb3","CarbonCreditContract","jsxDEV","_jsxDEV","Web3Context","Web3Provider","children","_s","web3","setWeb3","carbonCreditContract","setCarbonCreditContract","initializeWeb3","web3Instance","Web3","window","ethereum","console","log","networkId","eth","net","getId","deployedNetwork","networks","contractInstance","Contract","abi","address","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWeb3","_s2","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/carbontradex/frontend/src/contexts/Web3Context.js"],"sourcesContent":["// Web3Context.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport getWeb3 from '../utils/getWeb3';\nimport CarbonCreditContract from '../contracts/artifacts/CarbonCredit.json';\n\nconst Web3Context = createContext();\n\nexport function Web3Provider({ children }) {\n    const [web3, setWeb3] = useState(null);\n    const [carbonCreditContract, setCarbonCreditContract] = useState(null);\n\n    useEffect(() => {\n        async function initializeWeb3() {\n            try {\n                const web3Instance = new Web3(window.ethereum);\n                console.log(web3Instance);\n                const networkId = await web3Instance.eth.net.getId();\n                console.log(networkId)\n                const deployedNetwork = CarbonCreditContract.networks[networkId];\n                console.log(deployedNetwork)\n                const contractInstance = new web3Instance.eth.Contract(\n                    CarbonCreditContract.abi,\n                    deployedNetwork && deployedNetwork.address\n                );\n                console.log(contractInstance);\n                setWeb3(web3Instance);\n                setCarbonCreditContract(contractInstance);\n            } catch (error) {\n                console.error('Error connecting to Web3', error);\n            }\n        }\n\n        initializeWeb3();\n    }, []);\n\n    return (\n        <Web3Context.Provider value={{ web3, carbonCreditContract }}>\n            {children}\n        </Web3Context.Provider>\n    );\n}\n\nexport function useWeb3() {\n    return useContext(Web3Context);\n}\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,oBAAoB,MAAM,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASS,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtED,SAAS,CAAC,MAAM;IACZ,eAAec,cAAcA,CAAA,EAAG;MAC5B,IAAI;QACA,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC;QAC9CC,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;QACzB,MAAMM,SAAS,GAAG,MAAMN,YAAY,CAACO,GAAG,CAACC,GAAG,CAACC,KAAK,CAAC,CAAC;QACpDL,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC;QACtB,MAAMI,eAAe,GAAGtB,oBAAoB,CAACuB,QAAQ,CAACL,SAAS,CAAC;QAChEF,OAAO,CAACC,GAAG,CAACK,eAAe,CAAC;QAC5B,MAAME,gBAAgB,GAAG,IAAIZ,YAAY,CAACO,GAAG,CAACM,QAAQ,CAClDzB,oBAAoB,CAAC0B,GAAG,EACxBJ,eAAe,IAAIA,eAAe,CAACK,OACvC,CAAC;QACDX,OAAO,CAACC,GAAG,CAACO,gBAAgB,CAAC;QAC7BhB,OAAO,CAACI,YAAY,CAAC;QACrBF,uBAAuB,CAACc,gBAAgB,CAAC;MAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZZ,OAAO,CAACY,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ;IAEAjB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEE;IAAqB,CAAE;IAAAJ,QAAA,EACvDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAAC5B,EAAA,CAjCeF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAmC5B,OAAO,SAASgC,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACtB,OAAOzC,UAAU,CAACO,WAAW,CAAC;AAClC;AAACkC,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}