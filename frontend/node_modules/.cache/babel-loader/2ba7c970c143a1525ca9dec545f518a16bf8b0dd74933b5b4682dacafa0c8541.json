{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/carbontradex/frontend/src/contexts/Web3Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Web3Context.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport CarbonCreditContract from '../contracts/artifacts/CarbonCredit.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Web3Context = /*#__PURE__*/createContext();\nexport function Web3Provider({\n  children\n}) {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [carbonCreditContract, setCarbonCreditContract] = useState(null);\n  useEffect(() => {\n    window.addEventListener('DOMContentLoaded', initializeWeb3);\n  }, [initializeWeb3]);\n  const initializeWeb3 = async () => {\n    if (window.ethereum) {\n      //     const initWeb3 = new Web3(window.ethereum);\n      //     setWeb3(initWeb3);\n      //     getCarbonCreditContract(web3);\n      // } else if (window.web3) {\n      const initWeb3 = new Web3(window.web3.currentProvider);\n      setWeb3(initWeb3);\n      console.log(web3);\n      getCarbonCreditContract(web3);\n    } else {\n      // Non-dapp browsers or no web3 provider\n      throw new Error('No web3 provider detected. Please install MetaMask or use a dapp browser.');\n    }\n  };\n  const getCarbonCreditContract = async web3 => {\n    if (!web3) {\n      return;\n    }\n    try {\n      const networkId = await web3.eth.net.getId();\n      console.log('networkID:', networkId);\n      // const deployedNetwork = CarbonCreditContract.networks[networkId];\n      // console.log('deployed Network:', deployedNetwork)\n      // if (deployedNetwork) {\n      const contractInstance = new web3.eth.Contract(CarbonCreditContract.abi,\n      // deployedNetwork.address\n      '0xd9145CCE52D386f254917e481eB44e9943F39138');\n      console.log('contractInstance:', contractInstance);\n      setCarbonCreditContract(contractInstance);\n      // } else {\n      //     console.error('The contract is not deployed on the current network');\n      // }\n    } catch (error) {\n      console.error('Error connecting to Web3', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Web3Context.Provider, {\n    value: {\n      web3,\n      carbonCreditContract\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Web3Provider, \"pDiAVkpWBdHEL62Q1wd6oDf11M0=\");\n_c = Web3Provider;\nexport function useWeb3() {\n  _s2();\n  return useContext(Web3Context);\n}\n_s2(useWeb3, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"Web3Provider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Web3","CarbonCreditContract","jsxDEV","_jsxDEV","Web3Context","Web3Provider","children","_s","web3","setWeb3","carbonCreditContract","setCarbonCreditContract","window","addEventListener","initializeWeb3","ethereum","initWeb3","currentProvider","console","log","getCarbonCreditContract","Error","networkId","eth","net","getId","contractInstance","Contract","abi","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWeb3","_s2","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/carbontradex/frontend/src/contexts/Web3Context.js"],"sourcesContent":["// Web3Context.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport CarbonCreditContract from '../contracts/artifacts/CarbonCredit.json';\n\nconst Web3Context = createContext();\n\nexport function Web3Provider({ children }) {\n    const [web3, setWeb3] = useState(null);\n    const [carbonCreditContract, setCarbonCreditContract] = useState(null);\n\n    useEffect(() => {\n        window.addEventListener('DOMContentLoaded', initializeWeb3);\n    }, [initializeWeb3]);\n\n    const initializeWeb3 = async () => {\n        if (window.ethereum) {\n            //     const initWeb3 = new Web3(window.ethereum);\n            //     setWeb3(initWeb3);\n            //     getCarbonCreditContract(web3);\n            // } else if (window.web3) {\n            const initWeb3 = new Web3(window.web3.currentProvider);\n            setWeb3(initWeb3);\n            console.log(web3);\n            getCarbonCreditContract(web3);\n        } else {\n            // Non-dapp browsers or no web3 provider\n            throw new Error('No web3 provider detected. Please install MetaMask or use a dapp browser.');\n        }\n    }\n\n    const getCarbonCreditContract = async (web3) => {\n        if (!web3) {\n            return;\n        }\n\n        try {\n            const networkId = await web3.eth.net.getId();\n            console.log('networkID:', networkId)\n            // const deployedNetwork = CarbonCreditContract.networks[networkId];\n            // console.log('deployed Network:', deployedNetwork)\n            // if (deployedNetwork) {\n            const contractInstance = new web3.eth.Contract(\n                CarbonCreditContract.abi,\n                // deployedNetwork.address\n                '0xd9145CCE52D386f254917e481eB44e9943F39138'\n            );\n            console.log('contractInstance:', contractInstance)\n            setCarbonCreditContract(contractInstance);\n            // } else {\n            //     console.error('The contract is not deployed on the current network');\n            // }\n        } catch (error) {\n            console.error('Error connecting to Web3', error);\n        }\n    }\n\n    return (\n        <Web3Context.Provider value={{ web3, carbonCreditContract }}>\n            {children}\n        </Web3Context.Provider>\n    );\n}\n\nexport function useWeb3() {\n    return useContext(Web3Context);\n}\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,oBAAoB,MAAM,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASS,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtED,SAAS,CAAC,MAAM;IACZc,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAEC,cAAc,CAAC;EAC/D,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIF,MAAM,CAACG,QAAQ,EAAE;MACjB;MACA;MACA;MACA;MACA,MAAMC,QAAQ,GAAG,IAAIhB,IAAI,CAACY,MAAM,CAACJ,IAAI,CAACS,eAAe,CAAC;MACtDR,OAAO,CAACO,QAAQ,CAAC;MACjBE,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;MACjBY,uBAAuB,CAACZ,IAAI,CAAC;IACjC,CAAC,MAAM;MACH;MACA,MAAM,IAAIa,KAAK,CAAC,2EAA2E,CAAC;IAChG;EACJ,CAAC;EAED,MAAMD,uBAAuB,GAAG,MAAOZ,IAAI,IAAK;IAC5C,IAAI,CAACA,IAAI,EAAE;MACP;IACJ;IAEA,IAAI;MACA,MAAMc,SAAS,GAAG,MAAMd,IAAI,CAACe,GAAG,CAACC,GAAG,CAACC,KAAK,CAAC,CAAC;MAC5CP,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEG,SAAS,CAAC;MACpC;MACA;MACA;MACA,MAAMI,gBAAgB,GAAG,IAAIlB,IAAI,CAACe,GAAG,CAACI,QAAQ,CAC1C1B,oBAAoB,CAAC2B,GAAG;MACxB;MACA,4CACJ,CAAC;MACDV,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEO,gBAAgB,CAAC;MAClDf,uBAAuB,CAACe,gBAAgB,CAAC;MACzC;MACA;MACA;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZX,OAAO,CAACW,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,oBACI1B,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEE;IAAqB,CAAE;IAAAJ,QAAA,EACvDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAAC5B,EAAA,CAvDeF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAyD5B,OAAO,SAASgC,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACtB,OAAOzC,UAAU,CAACO,WAAW,CAAC;AAClC;AAACkC,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}