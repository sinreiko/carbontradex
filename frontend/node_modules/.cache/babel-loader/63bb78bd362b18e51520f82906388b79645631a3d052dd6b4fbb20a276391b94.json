{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/carbontradex/frontend/src/components/EthereumAccount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EthereumAccount() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [error, setError] = useState('');\n  const connectToMetaMask = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(accounts);\n      const selectedAccount = accounts[0];\n      setAccount(selectedAccount);\n    } catch (err) {\n      if (err.code === 4001) {\n        setError('Please connect to MetaMask.');\n      } else {\n        setError(err.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectToMetaMask,\n      children: \"Connect to MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), account && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your Ethereum account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(EthereumAccount, \"xDrkicoPGv7YbWa8K0LYGFPPCII=\");\n_c = EthereumAccount;\nexport default EthereumAccount;\nvar _c;\n$RefreshReg$(_c, \"EthereumAccount\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EthereumAccount","_s","account","setAccount","error","setError","connectToMetaMask","accounts","window","ethereum","request","method","console","log","selectedAccount","err","code","message","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/carbontradex/frontend/src/components/EthereumAccount.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction EthereumAccount() {\n    const [account, setAccount] = useState('');\n    const [error, setError] = useState('');\n\n    const connectToMetaMask = async () => {\n        try {\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n            console.log(accounts)\n            const selectedAccount = accounts[0];\n            setAccount(selectedAccount);\n        } catch (err) {\n            if (err.code === 4001) {\n                setError('Please connect to MetaMask.');\n            } else {\n                setError(err.message);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <button onClick={connectToMetaMask}>Connect to MetaMask</button>\n            {account && <p>Your Ethereum account: {account}</p>}\n            {error && <p>Error: {error}</p>}\n        </div>\n    );\n}\n\nexport default EthereumAccount;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MACjFC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MACrB,MAAMO,eAAe,GAAGP,QAAQ,CAAC,CAAC,CAAC;MACnCJ,UAAU,CAACW,eAAe,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV,IAAIA,GAAG,CAACC,IAAI,KAAK,IAAI,EAAE;QACnBX,QAAQ,CAAC,6BAA6B,CAAC;MAC3C,CAAC,MAAM;QACHA,QAAQ,CAACU,GAAG,CAACE,OAAO,CAAC;MACzB;IACJ;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAQoB,OAAO,EAAEb,iBAAkB;MAAAY,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/DrB,OAAO,iBAAIH,OAAA;MAAAmB,QAAA,GAAG,yBAAuB,EAAChB,OAAO;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClDnB,KAAK,iBAAIL,OAAA;MAAAmB,QAAA,GAAG,SAAO,EAACd,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEd;AAACtB,EAAA,CA1BQD,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AA4BxB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}