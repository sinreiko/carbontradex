{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/carbontradex/frontend/src/contexts/Web3Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Web3Context.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport CarbonCreditContract from '../contracts/artifacts/CarbonCredit.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Web3Context = /*#__PURE__*/createContext();\nexport function Web3Provider({\n  children\n}) {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [carbonCreditContract, setCarbonCreditContract] = useState(null);\n  useEffect(() => {\n    async function initializeWeb3() {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        setWeb3(web3);\n        getCarbonCreditContract();\n      } else if (window.web3) {\n        const web3 = new Web3(window.web3.currentProvider);\n        setWeb3(web3);\n        getCarbonCreditContract();\n      } else {\n        // Non-dapp browsers or no web3 provider\n        throw new Error('No web3 provider detected. Please install MetaMask or use a dapp browser.');\n      }\n    }\n    initializeWeb3();\n  }, []);\n  const getCarbonCreditContract = async () => {\n    try {\n      const web3Instance = new Web3(window.ethereum);\n      console.log(web3Instance);\n      const networkId = await web3Instance.eth.net.getId();\n      console.log(networkId);\n      const deployedNetwork = CarbonCreditContract.networks[networkId];\n      console.log(deployedNetwork);\n      const contractInstance = new web3Instance.eth.Contract(CarbonCreditContract.abi, deployedNetwork && deployedNetwork.address);\n      console.log(contractInstance);\n      setWeb3(web3Instance);\n      setCarbonCreditContract(contractInstance);\n    } catch (error) {\n      console.error('Error connecting to Web3', error);\n    }\n    return /*#__PURE__*/_jsxDEV(Web3Context.Provider, {\n      value: {\n        web3,\n        carbonCreditContract\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n}\n_s(Web3Provider, \"pDiAVkpWBdHEL62Q1wd6oDf11M0=\");\n_c = Web3Provider;\nexport function useWeb3() {\n  _s2();\n  return useContext(Web3Context);\n}\n_s2(useWeb3, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"Web3Provider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Web3","CarbonCreditContract","jsxDEV","_jsxDEV","Web3Context","Web3Provider","children","_s","web3","setWeb3","carbonCreditContract","setCarbonCreditContract","initializeWeb3","window","ethereum","getCarbonCreditContract","currentProvider","Error","web3Instance","console","log","networkId","eth","net","getId","deployedNetwork","networks","contractInstance","Contract","abi","address","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWeb3","_s2","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/carbontradex/frontend/src/contexts/Web3Context.js"],"sourcesContent":["// Web3Context.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport CarbonCreditContract from '../contracts/artifacts/CarbonCredit.json';\n\nconst Web3Context = createContext();\n\nexport function Web3Provider({ children }) {\n    const [web3, setWeb3] = useState(null);\n    const [carbonCreditContract, setCarbonCreditContract] = useState(null);\n\n    useEffect(() => {\n        async function initializeWeb3() {\n            if (window.ethereum) {\n                const web3 = new Web3(window.ethereum);\n                setWeb3(web3);\n                getCarbonCreditContract();\n            } else if (window.web3) {\n                const web3 = new Web3(window.web3.currentProvider);\n                setWeb3(web3);\n                getCarbonCreditContract();\n            } else {\n                // Non-dapp browsers or no web3 provider\n                throw new Error('No web3 provider detected. Please install MetaMask or use a dapp browser.');\n            }\n\n        }\n        initializeWeb3();\n    }, []);\n\n    const getCarbonCreditContract = async () => {\n\n        try {\n            const web3Instance = new Web3(window.ethereum);\n            console.log(web3Instance);\n            const networkId = await web3Instance.eth.net.getId();\n            console.log(networkId)\n            const deployedNetwork = CarbonCreditContract.networks[networkId];\n            console.log(deployedNetwork)\n            const contractInstance = new web3Instance.eth.Contract(\n                CarbonCreditContract.abi,\n                deployedNetwork && deployedNetwork.address\n            );\n            console.log(contractInstance);\n            setWeb3(web3Instance);\n            setCarbonCreditContract(contractInstance);\n        } catch (error) {\n            console.error('Error connecting to Web3', error);\n        }\n\n        return (\n            <Web3Context.Provider value={{ web3, carbonCreditContract }}>\n                {children}\n            </Web3Context.Provider>\n        );\n    }\n}\nexport function useWeb3() {\n    return useContext(Web3Context);\n}\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,oBAAoB,MAAM,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASS,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtED,SAAS,CAAC,MAAM;IACZ,eAAec,cAAcA,CAAA,EAAG;MAC5B,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACjB,MAAMN,IAAI,GAAG,IAAIR,IAAI,CAACa,MAAM,CAACC,QAAQ,CAAC;QACtCL,OAAO,CAACD,IAAI,CAAC;QACbO,uBAAuB,CAAC,CAAC;MAC7B,CAAC,MAAM,IAAIF,MAAM,CAACL,IAAI,EAAE;QACpB,MAAMA,IAAI,GAAG,IAAIR,IAAI,CAACa,MAAM,CAACL,IAAI,CAACQ,eAAe,CAAC;QAClDP,OAAO,CAACD,IAAI,CAAC;QACbO,uBAAuB,CAAC,CAAC;MAC7B,CAAC,MAAM;QACH;QACA,MAAM,IAAIE,KAAK,CAAC,2EAA2E,CAAC;MAChG;IAEJ;IACAL,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAExC,IAAI;MACA,MAAMG,YAAY,GAAG,IAAIlB,IAAI,CAACa,MAAM,CAACC,QAAQ,CAAC;MAC9CK,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;MACzB,MAAMG,SAAS,GAAG,MAAMH,YAAY,CAACI,GAAG,CAACC,GAAG,CAACC,KAAK,CAAC,CAAC;MACpDL,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC;MACtB,MAAMI,eAAe,GAAGxB,oBAAoB,CAACyB,QAAQ,CAACL,SAAS,CAAC;MAChEF,OAAO,CAACC,GAAG,CAACK,eAAe,CAAC;MAC5B,MAAME,gBAAgB,GAAG,IAAIT,YAAY,CAACI,GAAG,CAACM,QAAQ,CAClD3B,oBAAoB,CAAC4B,GAAG,EACxBJ,eAAe,IAAIA,eAAe,CAACK,OACvC,CAAC;MACDX,OAAO,CAACC,GAAG,CAACO,gBAAgB,CAAC;MAC7BlB,OAAO,CAACS,YAAY,CAAC;MACrBP,uBAAuB,CAACgB,gBAAgB,CAAC;IAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZZ,OAAO,CAACY,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;IAEA,oBACI5B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;MAACC,KAAK,EAAE;QAAEzB,IAAI;QAAEE;MAAqB,CAAE;MAAAJ,QAAA,EACvDA;IAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAE/B,CAAC;AACL;AAAC9B,EAAA,CAjDeF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAkD5B,OAAO,SAASkC,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACtB,OAAO3C,UAAU,CAACO,WAAW,CAAC;AAClC;AAACoC,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}