{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/carbontradex/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport getWeb3 from './utils/getWeb3';\nimport CarbonCreditDashboard from './pages/CarbonCreditDashboard';\nimport CarbonCredit from './contracts/CarbonCredit.sol';\nimport UserPage from './pages/UserPage.js';\nimport EthereumAccount from './components/EthereumAccount';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [carbonCreditContract, setCarbonCreditContract] = useState(null);\n  useEffect(() => {\n    window.addEventListener('DOMContentLoaded', initializeWeb3);\n  }, []);\n  const initializeWeb3 = async () => {\n    try {\n      const web3Instance = await getWeb3();\n      const networkId = await web3Instance.eth.net.getId();\n      const deployedNetwork = CarbonCredit.networks[networkId];\n      const contractInstance = new web3Instance.eth.Contract(CarbonCredit.abi, deployedNetwork && deployedNetwork.address);\n      console.log(web3Instance);\n      setWeb3(web3Instance);\n      setCarbonCreditContract(contractInstance);\n      console.log('Web3 and contract instances are available:', web3Instance, contractInstance);\n    } catch (error) {\n      console.error('Error connecting to Web3', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EthereumAccount, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CarbonCreditDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true)\n\n  // <div className=\"App\">\n  //   <header className=\"App-header\">\n  //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //     <p>\n  //       Edit <code>src/App.js</code> and save to reload.\n  //     </p>\n  //     <a\n  //       className=\"App-link\"\n  //       href=\"https://reactjs.org\"\n  //       target=\"_blank\"\n  //       rel=\"noopener noreferrer\"\n  //     >\n  //       Learn React\n  //     </a>\n  //   </header>\n  // </div>\n  ;\n}\n_s(App, \"jp7eKSvNhBBTjobZchpB0xqrnuw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","getWeb3","CarbonCreditDashboard","CarbonCredit","UserPage","EthereumAccount","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","web3","setWeb3","accounts","setAccounts","carbonCreditContract","setCarbonCreditContract","window","addEventListener","initializeWeb3","web3Instance","networkId","eth","net","getId","deployedNetwork","networks","contractInstance","Contract","abi","address","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/carbontradex/frontend/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport getWeb3 from './utils/getWeb3';\nimport CarbonCreditDashboard from './pages/CarbonCreditDashboard'\nimport CarbonCredit from './contracts/CarbonCredit.sol'\nimport UserPage from './pages/UserPage.js'\nimport EthereumAccount from './components/EthereumAccount';\nfunction App() {\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [carbonCreditContract, setCarbonCreditContract] = useState(null);\n\n  useEffect(() => {\n    window.addEventListener('DOMContentLoaded', initializeWeb3);\n  }, []);\n\n  const initializeWeb3 = async () => {\n    try {\n      const web3Instance = await getWeb3();\n      const networkId = await web3Instance.eth.net.getId();\n      const deployedNetwork = CarbonCredit.networks[networkId];\n      const contractInstance = new web3Instance.eth.Contract(\n        CarbonCredit.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n      console.log(web3Instance);\n      setWeb3(web3Instance);\n\n      setCarbonCreditContract(contractInstance);\n      console.log('Web3 and contract instances are available:', web3Instance, contractInstance);\n    } catch (error) {\n      console.error('Error connecting to Web3', error);\n    }\n  };\n  return (\n    <>\n      <EthereumAccount />\n      <CarbonCreditDashboard />\n      <UserPage />\n    </>\n\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,qBAAqB,MAAM,+BAA+B;AACjE,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEtED,SAAS,CAAC,MAAM;IACdmB,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAEC,cAAc,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMpB,OAAO,CAAC,CAAC;MACpC,MAAMqB,SAAS,GAAG,MAAMD,YAAY,CAACE,GAAG,CAACC,GAAG,CAACC,KAAK,CAAC,CAAC;MACpD,MAAMC,eAAe,GAAGvB,YAAY,CAACwB,QAAQ,CAACL,SAAS,CAAC;MACxD,MAAMM,gBAAgB,GAAG,IAAIP,YAAY,CAACE,GAAG,CAACM,QAAQ,CACpD1B,YAAY,CAAC2B,GAAG,EAChBJ,eAAe,IAAIA,eAAe,CAACK,OACrC,CAAC;MACDC,OAAO,CAACC,GAAG,CAACZ,YAAY,CAAC;MACzBR,OAAO,CAACQ,YAAY,CAAC;MAErBJ,uBAAuB,CAACW,gBAAgB,CAAC;MACzCI,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEZ,YAAY,EAAEO,gBAAgB,CAAC;IAC3F,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EACD,oBACE3B,OAAA,CAAAE,SAAA;IAAA0B,QAAA,gBACE5B,OAAA,CAACF,eAAe;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBhC,OAAA,CAACL,qBAAqB;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBhC,OAAA,CAACH,QAAQ;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACZ;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAAC5B,EAAA,CAnDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}