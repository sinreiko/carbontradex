{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/carbontradex/frontend/src/pages/CarbonCreditDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CarbonCreditDashboard() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [companyName, setCompanyName] = useState('');\n  const [creditAmount, setCreditAmount] = useState(0);\n  const addTransaction = async () => {\n    // In a real application, you would send a transaction to the smart contract\n    // to record the carbon credit transaction and retrieve this data from the blockchain.\n    if (!web3 || !carbonCreditContract) {\n      return;\n    }\n    try {\n      // In a real application, you would send a transaction to the smart contract\n      // to record the carbon credit transaction and retrieve this data from the blockchain.\n      await carbonCreditContract.methods.recordTransaction(companyName, creditAmount).send({\n        from: web3.eth.defaultAccount // Use the selected Ethereum account\n      });\n\n      const newTransaction = {\n        company: companyName,\n        credits: creditAmount,\n        timestamp: new Date().toLocaleString()\n      };\n      setTransactions([...transactions, newTransaction]);\n\n      // Clear the input fields\n      setCompanyName('');\n      setCreditAmount(0);\n    } catch (error) {\n      console.error('Error adding transaction', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carbon-trading-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Carbon Credit Trading Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Name\",\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Credit Amount\",\n        value: creditAmount,\n        onChange: e => setCreditAmount(parseInt(e.target.value, 10))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTransaction,\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), \" \", transaction.company, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Credits:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), \" \", transaction.credits, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Timestamp:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), \" \", transaction.timestamp]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(CarbonCreditDashboard, \"g5vvxB2FuBwPZIsAEuJjRBYxbFM=\");\n_c = CarbonCreditDashboard;\nexport default CarbonCreditDashboard;\nvar _c;\n$RefreshReg$(_c, \"CarbonCreditDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CarbonCreditDashboard","_s","transactions","setTransactions","companyName","setCompanyName","creditAmount","setCreditAmount","addTransaction","web3","carbonCreditContract","methods","recordTransaction","send","from","eth","defaultAccount","newTransaction","company","credits","timestamp","Date","toLocaleString","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","parseInt","onClick","map","transaction","index","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/carbontradex/frontend/src/pages/CarbonCreditDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction CarbonCreditDashboard() {\n    const [transactions, setTransactions] = useState([]);\n    const [companyName, setCompanyName] = useState('');\n    const [creditAmount, setCreditAmount] = useState(0);\n\n    const addTransaction = async () => {\n        // In a real application, you would send a transaction to the smart contract\n        // to record the carbon credit transaction and retrieve this data from the blockchain.\n        if (!web3 || !carbonCreditContract) {\n            return;\n        }\n\n        try {\n            // In a real application, you would send a transaction to the smart contract\n            // to record the carbon credit transaction and retrieve this data from the blockchain.\n            await carbonCreditContract.methods.recordTransaction(companyName, creditAmount).send({\n                from: web3.eth.defaultAccount, // Use the selected Ethereum account\n            });\n\n            const newTransaction = {\n                company: companyName,\n                credits: creditAmount,\n                timestamp: new Date().toLocaleString(),\n            };\n\n            setTransactions([...transactions, newTransaction]);\n\n            // Clear the input fields\n            setCompanyName('');\n            setCreditAmount(0);\n        } catch (error) {\n            console.error('Error adding transaction', error);\n        }\n    };\n\n    return (\n        <div className=\"carbon-trading-app\">\n            <h1>Carbon Credit Trading Dashboard</h1>\n            <div className=\"transaction-form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Company Name\"\n                    value={companyName}\n                    onChange={(e) => setCompanyName(e.target.value)}\n                />\n                <input\n                    type=\"number\"\n                    placeholder=\"Credit Amount\"\n                    value={creditAmount}\n                    onChange={(e) => setCreditAmount(parseInt(e.target.value, 10))}\n                />\n                <button onClick={addTransaction}>Add Transaction</button>\n            </div>\n            <div className=\"transaction-list\">\n                <h2>Recent Transactions</h2>\n                <ul>\n                    {transactions.map((transaction, index) => (\n                        <li key={index}>\n                            <strong>Company:</strong> {transaction.company} |\n                            <strong>Credits:</strong> {transaction.credits} |\n                            <strong>Timestamp:</strong> {transaction.timestamp}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default CarbonCreditDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}