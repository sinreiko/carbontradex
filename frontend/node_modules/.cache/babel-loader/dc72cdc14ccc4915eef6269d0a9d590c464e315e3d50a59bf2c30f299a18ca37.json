{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/carbontradex/frontend/src/contexts/Web3Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Web3Context.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport CarbonCreditContract from '../contracts/artifacts/CarbonCredit.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Web3Context = /*#__PURE__*/createContext();\nexport function Web3Provider({\n  children\n}) {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [carbonCreditContract, setCarbonCreditContract] = useState(null);\n  useEffect(() => {\n    window.addEventListener('DOMContentLoaded', initializeWeb3);\n    const initializeWeb3 = async () => {\n      if (window.ethereum) {\n        const initWeb3 = new Web3(window.ethereum);\n        setWeb3(initWeb3);\n        console.log(web3);\n        getCarbonCreditContract(web3);\n      } else if (window.web3) {\n        const initWeb3 = new Web3(window.web3.currentProvider);\n        setWeb3(initWeb3);\n        console.log(web3);\n        getCarbonCreditContract(web3);\n      } else {\n        // Non-dapp browsers or no web3 provider\n        throw new Error('No web3 provider detected. Please install MetaMask or use a dapp browser.');\n      }\n    };\n  }, [initializeWeb3]);\n  const getCarbonCreditContract = async web3 => {\n    try {\n      const networkId = await web3.eth.net.getId();\n      console.log('networkID:', networkId);\n      const deployedNetwork = CarbonCreditContract.networks[networkId];\n      console.log('deployed Network:', deployedNetwork);\n      if (deployedNetwork) {\n        const contractInstance = new web3.eth.Contract(CarbonCreditContract.abi, deployedNetwork && deployedNetwork.address\n        // '0xd9145CCE52D386f254917e481eB44e9943F39138'\n        );\n\n        console.log('contractInstance:', contractInstance);\n        setCarbonCreditContract(contractInstance);\n      } else {\n        console.error('The contract is not deployed on the current network');\n      }\n    } catch (error) {\n      console.error('Error connecting to Web3', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Web3Context.Provider, {\n    value: {\n      web3,\n      carbonCreditContract\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Web3Provider, \"pDiAVkpWBdHEL62Q1wd6oDf11M0=\");\n_c = Web3Provider;\nexport function useWeb3() {\n  _s2();\n  return useContext(Web3Context);\n}\n_s2(useWeb3, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"Web3Provider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Web3","CarbonCreditContract","jsxDEV","_jsxDEV","Web3Context","Web3Provider","children","_s","web3","setWeb3","carbonCreditContract","setCarbonCreditContract","window","addEventListener","initializeWeb3","ethereum","initWeb3","console","log","getCarbonCreditContract","currentProvider","Error","networkId","eth","net","getId","deployedNetwork","networks","contractInstance","Contract","abi","address","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWeb3","_s2","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/carbontradex/frontend/src/contexts/Web3Context.js"],"sourcesContent":["// Web3Context.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport CarbonCreditContract from '../contracts/artifacts/CarbonCredit.json';\n\nconst Web3Context = createContext();\n\nexport function Web3Provider({ children }) {\n    const [web3, setWeb3] = useState(null);\n    const [carbonCreditContract, setCarbonCreditContract] = useState(null);\n\n    useEffect(() => {\n        window.addEventListener('DOMContentLoaded', initializeWeb3);\n        const initializeWeb3 = async () => {\n            if (window.ethereum) {\n                const initWeb3 = new Web3(window.ethereum);\n                setWeb3(initWeb3);\n                console.log(web3);\n                getCarbonCreditContract(web3);\n            } else if (window.web3) {\n                const initWeb3 = new Web3(window.web3.currentProvider);\n                setWeb3(initWeb3);\n                console.log(web3);\n                getCarbonCreditContract(web3);\n            } else {\n                // Non-dapp browsers or no web3 provider\n                throw new Error('No web3 provider detected. Please install MetaMask or use a dapp browser.');\n            }\n        }\n    }, [initializeWeb3]);\n\n\n\n    const getCarbonCreditContract = async (web3) => {\n        try {\n            const networkId = await web3.eth.net.getId();\n            console.log('networkID:', networkId)\n            const deployedNetwork = CarbonCreditContract.networks[networkId];\n            console.log('deployed Network:', deployedNetwork)\n            if (deployedNetwork) {\n                const contractInstance = new web3.eth.Contract(\n                    CarbonCreditContract.abi,\n                    deployedNetwork && deployedNetwork.address\n                    // '0xd9145CCE52D386f254917e481eB44e9943F39138'\n                );\n                console.log('contractInstance:', contractInstance)\n                setCarbonCreditContract(contractInstance);\n            } else {\n                console.error('The contract is not deployed on the current network');\n            }\n        } catch (error) {\n            console.error('Error connecting to Web3', error);\n        }\n    }\n\n    return (\n        <Web3Context.Provider value={{ web3, carbonCreditContract }}>\n            {children}\n        </Web3Context.Provider>\n    );\n}\n\nexport function useWeb3() {\n    return useContext(Web3Context);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}