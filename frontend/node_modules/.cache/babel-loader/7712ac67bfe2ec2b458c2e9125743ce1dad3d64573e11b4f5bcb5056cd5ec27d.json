{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/carbontradex/frontend/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrender( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this), document.querySelector('#root'));\n// import Web3 from 'web3';\n\n// function CarbonTradingApp() {\n//   const [transactions, setTransactions] = useState([]);\n//   const [companyName, setCompanyName] = useState('');\n//   const [creditAmount, setCreditAmount] = useState(0);\n\n//   const addTransaction = () => {\n//     // In a real application, you would send a transaction to the smart contract\n//     // to record the carbon credit transaction and retrieve this data from the blockchain.\n//     const newTransaction = {\n//       company: companyName,\n//       credits: creditAmount,\n//       timestamp: new Date().toLocaleString(),\n//     };\n//     setTransactions([...transactions, newTransaction]);\n\n//     // Clear the input fields\n//     setCompanyName('');\n//     setCreditAmount(0);\n//   };\n\n//   return (\n//     <div className=\"carbon-trading-app\">\n//       <h1>Carbon Credit Trading Dashboard</h1>\n//       <div className=\"transaction-form\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Company Name\"\n//           value={companyName}\n//           onChange={(e) => setCompanyName(e.target.value)}\n//         />\n//         <input\n//           type=\"number\"\n//           placeholder=\"Credit Amount\"\n//           value={creditAmount}\n//           onChange={(e) => setCreditAmount(parseInt(e.target.value, 10))}\n//         />\n//         <button onClick={addTransaction}>Add Transaction</button>\n//       </div>\n//       <div className=\"transaction-list\">\n//         <h2>Recent Transactions</h2>\n//         <ul>\n//           {transactions.map((transaction, index) => (\n//             <li key={index}>\n//               <strong>Company:</strong> {transaction.company} |\n//               <strong>Credits:</strong> {transaction.credits} |\n//               <strong>Timestamp:</strong> {transaction.timestamp}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default CarbonTradingApp;","map":{"version":3,"names":["React","render","BrowserRouter","App","jsxDEV","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","document","querySelector"],"sources":["/Applications/MAMP/htdocs/carbontradex/frontend/src/index.js"],"sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nrender(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.querySelector('#root')\n)\n// import Web3 from 'web3';\n\n// function CarbonTradingApp() {\n//   const [transactions, setTransactions] = useState([]);\n//   const [companyName, setCompanyName] = useState('');\n//   const [creditAmount, setCreditAmount] = useState(0);\n\n//   const addTransaction = () => {\n//     // In a real application, you would send a transaction to the smart contract\n//     // to record the carbon credit transaction and retrieve this data from the blockchain.\n//     const newTransaction = {\n//       company: companyName,\n//       credits: creditAmount,\n//       timestamp: new Date().toLocaleString(),\n//     };\n//     setTransactions([...transactions, newTransaction]);\n\n//     // Clear the input fields\n//     setCompanyName('');\n//     setCreditAmount(0);\n//   };\n\n//   return (\n//     <div className=\"carbon-trading-app\">\n//       <h1>Carbon Credit Trading Dashboard</h1>\n//       <div className=\"transaction-form\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Company Name\"\n//           value={companyName}\n//           onChange={(e) => setCompanyName(e.target.value)}\n//         />\n//         <input\n//           type=\"number\"\n//           placeholder=\"Credit Amount\"\n//           value={creditAmount}\n//           onChange={(e) => setCreditAmount(parseInt(e.target.value, 10))}\n//         />\n//         <button onClick={addTransaction}>Add Transaction</button>\n//       </div>\n//       <div className=\"transaction-list\">\n//         <h2>Recent Transactions</h2>\n//         <ul>\n//           {transactions.map((transaction, index) => (\n//             <li key={index}>\n//               <strong>Company:</strong> {transaction.company} |\n//               <strong>Credits:</strong> {transaction.credits} |\n//               <strong>Timestamp:</strong> {transaction.timestamp}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default CarbonTradingApp;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,GAAG,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvBJ,MAAM,eACJI,OAAA,CAACH,aAAa;EAAAI,QAAA,eACZD,OAAA,CAACF,GAAG;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACM,CAAC,EAChBC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAChC,CAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}